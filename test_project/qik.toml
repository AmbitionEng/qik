plugins = [{name = "graph", pyimport = "qik.pygraph"}, {name = "uv", pyimport = "qik.uv"}]
deps = ["python_version"]
vars = ["aws_access_key_id", "aws_secret_access_key", {name = "aws_endpoint_url", required = false}]

[spaces.default]
venv = { type = "uv", reqs = "requirements.in" }
modules = ["a", {name = "b_module", path = "b"}]

[spaces.nested]
venv = { type = "uv", reqs = "req2.in", python = ">3.12" }
modules = ["nest/c"]

[caches.remote]
type = "s3"
bucket = "qik-cache-test"
aws-access-key-id = "{ctx.project.aws_access_key_id}"
aws-secret-access-key = "{ctx.project.aws_secret_access_key}"
region-name = "us-west-2"
endpoint-url = "{ctx.project.aws_endpoint_url}"

[ctx.ci.qik]
workers = 1

[commands.fail]
exec = 'exit 1'

[commands.pghistory_version]
exec = "pip freeze | grep django-pgtrigger && python --version"
cache = "local"

[commands.dep_fail]
exec = 'echo "hi"; exit 1'
deps = [{type = "command", name = "fail"}, {type = "const", val = "hi"}]

[commands.lock]
exec = "pip-compile > requirements.txt"
deps = ["requirements.in", {type = "pydist", name = "pip-tools"}]
artifacts = ["requirements.txt"]
cache = "remote"
cache-when = "finished"

[commands.modular_lint]
exec = "ruff check {module.dir}"
deps = [{type = "pygraph", pyimport = "{module.pyimport}"}]
cache = "repo"

[commands.ind_lint]
exec = "ruff check b"
deps = [{type = "pygraph", pyimport = "b"}, {type = "pygraph", pyimport = "nest.c"}]
cache = "repo"

[commands.modular_format]
exec = "ruff format {module.dir}"
deps = ["{module.dir}/**.py", {type = "command", name = "modular_lint"}]
cache = "repo"

[commands.lint]
exec = "ruff check --fix && ruff format"
deps = ["**.py"]
cache = "remote"
